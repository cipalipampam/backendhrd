generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

enum Role {
  KARYAWAN
  HR
}

enum Gender {
  Pria
  Wanita
}

model User {
  username        String   @id
  email     String   @unique
  role      Role     @default(KARYAWAN)
  password  String
  karyawan  Karyawan?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Departemen {
  id        String     @id @default(cuid())
  nama      String     @unique
  Karyawan  Karyawan[] @relation("DepartemenOnKaryawan")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Jabatan {
  id        String     @id @default(cuid())
  nama      String     @unique
  Karyawan  Karyawan[] @relation("JabatanOnKaryawan")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model KPI {
  id         String   @id @default(cuid())
  year       Int
  score      Float
  notes      String?
  karyawanId String
  karyawan   Karyawan @relation(fields: [karyawanId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Rating {
  id         String   @id @default(cuid())
  year       Int
  score      Float
  notes      String?
  karyawanId String
  karyawan   Karyawan @relation(fields: [karyawanId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Penghargaan {
  id        String       @id @default(cuid())
  nama      String
  tahun     DateTime
  Karyawan  Karyawan[]   @relation("PenghargaanOnKaryawan")
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Pelatihan {
  id        String            @id @default(cuid())
  nama      String
  tanggal   DateTime
  lokasi    String
  peserta   PelatihanDetail[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PelatihanDetail {
  id          String    @id @default(cuid())
  pelatihanId String
  karyawanId  String
  skor        Float?
  catatan     String?

  pelatihan   Pelatihan @relation(fields: [pelatihanId], references: [id])
  karyawan    Karyawan  @relation(fields: [karyawanId], references: [id])

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([pelatihanId, karyawanId])
}

model Karyawan {
  id               String            @id @default(cuid())
  nama             String
  gender           Gender
  alamat           String?
  no_telp          String?
  tanggal_lahir    DateTime?
  pendidikan       String
  tanggal_masuk    DateTime
  jalur_rekrut     String
  penghargaan      Penghargaan[]    @relation("PenghargaanOnKaryawan")
  Departemen       Departemen[]     @relation("DepartemenOnKaryawan")
  Jabatan          Jabatan[]        @relation("JabatanOnKaryawan")
  KPI              KPI[]            // 1 karyawan -> banyak KPI
  Rating           Rating[]         // 1 karyawan -> banyak Rating
  pelatihanDetail  PelatihanDetail[]
  userId           String           @unique
  user             User             @relation(fields: [userId], references: [username])
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
}
